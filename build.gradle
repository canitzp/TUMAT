buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'de.undercouch:gradle-download-task:3.2.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'
apply plugin: 'de.undercouch.download'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = project.tumat_version
group = "de.canizp.tumat"
archivesBaseName = "TUMAT-" + project.tumat_version

if(hasProperty('buildnumber')){
    version = "${version}-${this.properties['buildnumber']}"
}

minecraft {
    version = project.minecraft_version + "-" + project.forge_version
    runDir = "run"
    mappings = project.forge_mappings
    replaceIn "TUMAT.java"
    replace "@VERSION@", project.version.toString()
    replace "@BUILD_DATE@", new Date().format("yyMMddHHmm")
}

repositories {
    maven { // Tesla
        url = "http://maven.epoxide.xyz"
    }
    maven { // Actually Additions
        url = "http://maven.chaosfield.at"
    }
    maven { // JEI
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven { // IC2
        url = "http://maven.ic2.player.to/"
    }
    maven { // RefinedStorage
        url = "http://dl.bintray.com/raoulvdberge/dev"
    }
    maven { // MCMultiPart
        url = "http://maven.amadornes.com/"
    }
    maven { // CommonCapabilities
        url "https://dl.bintray.com/cyclopsmc/dev/"
    }
}

dependencies {
    deobfCompile "mezz.jei:jei_" + project.minecraft_version + ":" + project.jei_version + ":api"
    runtime "mezz.jei:jei_" + project.minecraft_version + ":" + project.jei_version
    deobfCompile "de.ellpeck.actuallyadditions:ActuallyAdditions:" + project.minecraft_version + "-" + project.actadd_version
    deobfCompile "mod.chiselsandbits:chiselsandbits:+"
    deobfCompile "refinedstorage:refinedstorage:" + project.refinedstorage_version + "-+"
    deobfCompile "org.cyclops.commoncapabilities:CommonCapabilities:" + project.minecraft_version + "-" + project.commoncaps_version + "-+"
    compileOnly "net.industrial-craft:industrialcraft-2:" + project.ic2_version + ":dev"
    runtime "net.industrial-craft:industrialcraft-2:" + project.ic2_version + ":dev"
    compileOnly "net.sengir.forestry:forestry_" + project.minecraft_version + ":" + project.forestry_version
    runtime "net.sengir.forestry:forestry_" + project.minecraft_version + ":" + project.forestry_version

    //No Tesla support anymore deobfCompile "net.darkhax.tesla:Tesla:1.11-1.3.0.51"
    //compileOnly "slimeknights.mantle:Mantle:1.10.2-1.1.0.188:deobf"
    //compileOnly "slimeknights:TConstruct:1.10.2-2.5.6.414:deobf"
    //compileOnly "MCMultiPart:MCMultiPart:1.3.0:universal"

    download {
        src "https://minecraft.curseforge.com/projects/pams-harvestcraft/files/2395571/download"
        dest "./libs/Pams HarvestCraft.jar"
    }
    download {
        src "https://github.com/jaquadro/Chameleon/releases/download/cham-3.0.2/Chameleon-1.11-3.0.2.jar"
        dest "./libs/Chameleon.jar"
    }
    download {
        src "https://github.com/jaquadro/StorageDrawers/releases/download/sd-4.2.0/StorageDrawers-1.11.2-4.2.0.jar"
        dest "./libs/Storage Drawers.jar"
    }

    compile fileTree("./libs")
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {

}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.java
    classifier = 'dev'
}

task apiJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.java
    classifier = 'api'
    include 'de/canitzp/tumat/api/**'
}

javadoc {
    include 'de/canitzp/tumat/api/**'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    classifier 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java
    classifier = 'sources'
}

apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact apiJar
            artifact javadocJar
            artifact sourcesJar
            artifact deobfJar
        }
    }
    repositories {
        maven {
            url "file:///srv/nginx/maven"
        }
    }
}
